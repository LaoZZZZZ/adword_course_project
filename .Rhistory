#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth", "Estimated"))
# check the interseciton part
intersection = merge(survival_barcodes, high_result, by.x = "barcode", by.y = "Centers")
attach(intersection)
col = normalized_frequency- Cluster.Size > 10
color = ifelse(col, 'red', 'blue')
plot(intersection$normalized_frequency, intersection$Cluster.Size, col = color, pch = 20,
xlab = "True frequency", ylab = "Estimated frequency")
abline(0, 1, col = 'red', lwd = 3)
detach(intersection)
# generate the histogram of false positive
false_positive = high_result[which(!(high_result$Centers %in% survival_barcodes$barcode)),]
hist(false_positive$Cluster.Size, col = 'red', xlab = 'Size of barcodes',
main = "False positive barcodes")
summary(false_positive$Cluster.Size)
# generates the histogram of missing true barcodes.
missing = survival_barcodes[which(!(survival_barcodes$barcode %in% high_result$Center)),]
hist(missing$normalized_frequency, col = 'green', xlab = 'Size of barcodes ',
main = "Size distribution of missed true barcodes")
summary(missing$normalized_frequency)
dim(survival_barcodes)
dim(high_result)
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth", "Estimated"))
? calculate.overlap
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","shared", "Estimated"))
#percentage = paste('(~', round(100*area[[3]]/(area[[1]]), 2), '%)', sep = '')
area
? draw.pairwise.venn
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
header = F, sep = '\t')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
header = TRUE, sep = ',')
colnames(truth) = c("barcode", "normalized_frequency")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
#                    header = T, sep = ',')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
#                              header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
area
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# generates the histogram of missing true barcodes.
missing = survival_barcodes[which(!(survival_barcodes$barcode %in% high_result$Center)),]
hist(missing$normalized_frequency, col = 'green', xlab = 'Size of barcodes ',
main = "Size distribution of missed true barcodes")
summary(missing$normalized_frequency)
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_49.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_49_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# plot the Venndiagram
library(VennDiagram)
source("/home/laozzzzz/Documents/barcode_single_end/Rcode/distance_bitwise_util.R")
# truth = read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/True_barcode_freq.txt",
#                    header = F, sep = '\t')
#
#
# result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/simulated_data_cluster_cluster.csv",
#                              header = TRUE, sep = ',')
#
# colnames(truth) = c("barcode", "normalized_frequency")
truth = read.table("/home/laozzzzz/Documents/barcode_single_end/BarcodeSimulation/Truth_time_point_161.csv",
header = T, sep = ',')
result_cluster <- read.table("/home/laozzzzz/Documents/barcode_single_end/simulation_data/result_161_cluster.csv",
header = TRUE, sep = ',')
survival_barcodes =   truth[,"normalized_frequency"] > 3
survival_barcodes = truth[survival_barcodes,]
high_result = result_cluster[which(result_cluster$Cluster.Size > 3),]
combined = list()
combined[[1]] = survival_barcodes$barcode
combined[[2]] = high_result$Centers
overlap <- calculate.overlap(combined)
area = lapply(overlap, length)
plot.new()
draw.pairwise.venn(area[[1]],
area[[2]],
area[[3]],
scaled = T, label.col = c('green', 'yellow','red'),
fill = c('green','red'),
category = c("Truth","Estimated"))
# check the interseciton part
intersection = merge(survival_barcodes, high_result, by.x = "barcode", by.y = "Centers")
attach(intersection)
col = normalized_frequency- Cluster.Size > 10
color = ifelse(col, 'red', 'blue')
plot(intersection$normalized_frequency, intersection$Cluster.Size, col = color, pch = 20,
xlab = "True frequency", ylab = "Estimated frequency")
abline(0, 1, col = 'red', lwd = 3)
detach(intersection)
# generate the histogram of false positive
false_positive = high_result[which(!(high_result$Centers %in% survival_barcodes$barcode)),]
hist(false_positive$Cluster.Size, col = 'red', xlab = 'Size of barcodes',
main = "False positive barcodes")
summary(false_positive$Cluster.Size)
# generates the histogram of missing true barcodes.
missing = survival_barcodes[which(!(survival_barcodes$barcode %in% high_result$Center)),]
hist(missing$normalized_frequency, col = 'green', xlab = 'Size of barcodes ',
main = "Size distribution of missed true barcodes")
summary(missing$normalized_frequency)
#check the advertiser
setwd("/home/laozzzzz/Documents/adword_project/")
advertiser <- read.table("advister_info.csv", sep = ',', head = T)
advertiser <- read.table("advister_info_v3_uni_price.csv, sep = ',', head = T)
)
*
?
!
sfedsfdsfds
sfd
afd
a
fdad
fsafd
""
""
advertiser <- read.table("advister_info_v3_uni_price.csv", sep = ',', head = T)
dim(advertiser)
colnames(advertiser)
sum(advertiser$budget)
summary(advertiser$budget)
